version: '2'

services:
    db:
        restart: always
        image: postgres:13.0-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - ./.env.prod

    nginx: 
        restart: always
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        ports:
            - 80:80
            - 443:443
        volumes:
            - static_volume:/app/backend/server/staticfiles
            - media_volume:/app/backend/server/mediafiles
            - ./docker/nginx/production:/etc/nginx/conf.d
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        depends_on: 
            - backend
    certbot:
        image: certbot/certbot
        restart: always
        volumes:
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"     
          
    backend:
        container_name: backend_container
        restart: always
        build:
            context: .
            dockerfile: ./docker/backend/Dockerfile
        entrypoint: /app/docker/backend/wsgi-entrypoint.prod.sh
        volumes:
            - .:/app
            - static_volume:/app/backend/server/staticfiles
            - media_volume:/app/backend/server/mediafiles
        expose:
            - 8000        
        env_file:
            - ./.env.prod
        depends_on:
            - db

volumes:
    static_volume: 
    postgres_data:
    media_volume: